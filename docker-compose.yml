version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana-data: {}
  mysql_data: {}

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: recipe_db
      MYSQL_USER: recipe_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - monitoring

  django:
    build:
      context: ./recipe
    container_name: django
    ports:
      - "8000:8000"
    networks:
      - monitoring
    environment:
      - DJANGO_SETTINGS_MODULE=recipe.settings
    depends_on:
        - mysql
    volumes:
      - ./recipe/config:/app/config
    command: >
      sh -c "
      until nc -z mysql 3306; do
        echo 'Waiting for MySQL...';
        sleep 2;
      done;
      .venv/bin/python manage.py migrate &&
      .venv/bin/uvicorn recipe.asgi:application --host 0.0.0.0 --port 8000"
    

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring
